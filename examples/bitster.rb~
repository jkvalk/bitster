require 'bitster'

include Bitster

def enc(num, m, e)
  CryptoMath::modular_pow(num, e, m)
end

def dec(cnum, m, e)
  CryptoMath::modular_pow(cnum, e, m)
end

keylen = 1024
print "[*] Generating a new RSA keypair with modulus #{keylen}..."
pair = RSAKeyPair.new(keylen)
puts " done."

pubkey = pair.public_key
prikey = pair.private_key

plaintext = File.read("bitster.txt").split("")
ciphertext = Array.new
result = Array.new

print "[*] Encrypting..."
t0 = Time.now.to_i
plaintext.each do |c|
	ciphertext << enc(c.ord, pubkey.modulus, pubkey.exponent)
end
t1 = Time.now.to_i
puts " done; time elapsed: #{t1 - t0} seconds."


print "[*] Decrypting..."
t0 = Time.now.to_i
ciphertext.each do |c|
	result << (dec(c, prikey.modulus, prikey.exponent)).chr
end
t1 = Time.now.to_i
puts " done; time elapsed: #{t1 - t0} seconds."

puts "[*] Result:"
puts "-"*80
puts result.join
puts "-"*80
puts "[*] -END-"

